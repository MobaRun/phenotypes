import os
import json

##
#
# This script processes the covid phenotypes of MoBa into text tables and writes documentation.
#
# Commands to execute from the repository folder:
# conda activate snakemake
# snakemake --snakefile src/covid/covid_phenotypes.snake --cores 2 --use-conda --rerun-incomplete
##

####################### Parameters ###########################################

# Analysis
moba_version = "V12"
suffix = '23-05-28'
moba_project_number = 2824

# Raw phenotype files
linkage_folder = "/mnt/archive/linkage"
moba_ques_folder = "/mnt/archive/phenotype/moba_ques"
msis_folder = "/mnt/archive/phenotype/msis"
sysvak_folder = "/mnt/archive/phenotype/sysvak"
ques_folder = "/mnt/archive/phenotype/moba_covid_ques"

# Docs folders
docs_folder = f"docs/covid/{suffix}"
raw_docs_folder = f"{docs_folder}/raw"
covid_docs_folder = f"{docs_folder}/covid"
covid_table_docs = f"{covid_docs_folder}/moba_covid_phenotypes.md"

# Tables folders
tables_folder = f"/mnt/work/marc/pheno_covid_{suffix}"
raw_tables_folder = f"{tables_folder}/raw"
covid_tables_folder = f"{tables_folder}/covid"

# Raw tables
mfr_raw_table = os.path.join(raw_tables_folder, 'moba_ques', f'PDB{moba_project_number}_MFR_541_v12.gz')
q1m_table = os.path.join(raw_tables_folder, 'moba_ques', f'PDB{moba_project_number}_Skjema1_v12.gz')
q1f_table = os.path.join(raw_tables_folder, 'moba_ques', f'PDB{moba_project_number}_SkjemaFar_v12.gz')
q2_table = os.path.join(raw_tables_folder, 'moba_ques', f'PDB{moba_project_number}_Skjema2_v12.gz')
q3_table = os.path.join(raw_tables_folder, 'moba_ques', f'PDB{moba_project_number}_Skjema3_v12.gz')
q4_table = os.path.join(raw_tables_folder, 'moba_ques', f'PDB{moba_project_number}_Skjema4_6mnd_v12.gz')
q5_table = os.path.join(raw_tables_folder, 'moba_ques', f'PDB{moba_project_number}_Skjema5_18mnd_v12.gz')
q6_table = os.path.join(raw_tables_folder, 'moba_ques', f'PDB{moba_project_number}_Skjema6_3aar_v12.gz')
q7_table = os.path.join(raw_tables_folder, 'moba_ques', f'PDB{moba_project_number}_Skjema5aar_v12.gz')
q8_table = os.path.join(raw_tables_folder, 'moba_ques', f'PDB{moba_project_number}_Skjema7aar_v12.gz')
q9_table = os.path.join(raw_tables_folder, 'moba_ques', f'PDB{moba_project_number}_Skjema8aar_v12.gz')
skjemaKostUngdom_table = os.path.join(raw_tables_folder, 'moba_ques', f'PDB{moba_project_number}_SkjemaKostUngdom_v12.gz')
msis_raw_table = os.path.join(raw_tables_folder, 'msis', f'PDB{moba_project_number}_MSIS-data_MoBa.gz')
child_msis_id_mapping_raw_table = os.path.join(raw_tables_folder, 'msis', f'Barn_ID_{moba_project_number}_2021_11_17sav.gz')
mother_msis_id_mapping_raw_table = os.path.join(raw_tables_folder, 'msis', f'Mor_ID_{moba_project_number}_2021_11_17sav.gz')
father_msis_id_mapping_raw_table = os.path.join(raw_tables_folder, 'msis', f'Far_ID_{moba_project_number}_2021_11_17sav.gz')
sysvak_raw_table = os.path.join(raw_tables_folder, 'sysvak', f'SYSVAK210043_KOBLET_MOBA_01022022.gz')
child_sysvak_id_mapping_raw_table = os.path.join(raw_tables_folder, 'sysvak', f'2022_02_01_Barn_koblingsbro_{moba_project_number}.gz')
mother_sysvak_id_mapping_raw_table = os.path.join(raw_tables_folder, 'sysvak', f'2022_02_01_Mor_koblingsbro_{moba_project_number}.gz')
father_sysvak_id_mapping_raw_table = os.path.join(raw_tables_folder, 'sysvak', f'2022_02_01_Far_koblingsbro_{moba_project_number}_.gz')
child_id_linkage_raw_table = os.path.join(raw_tables_folder, 'linkage', f'20220516_MoBaGeneticsTot_Child_PDB{moba_project_number}.gz')
mother_id_linkage_raw_table = os.path.join(raw_tables_folder, 'linkage', f'20220516_MoBaGeneticsTot_Mother_PDB{moba_project_number}.gz')
father_id_linkage_raw_table = os.path.join(raw_tables_folder, 'linkage', f'20220516_MoBaGeneticsTot_Father_PDB{moba_project_number}.gz')

# Covid table
covid_table = os.path.join(covid_tables_folder, "moba_covid_phenotypes.gz")


####################### Housekeeping #########################################

if not os.path.isdir(docs_folder):
    os.makedirs(docs_folder)

if not os.path.isdir(raw_docs_folder):
    os.makedirs(raw_docs_folder)

if not os.path.isdir(covid_docs_folder):
    os.makedirs(covid_docs_folder)

if not os.path.isdir(tables_folder):
    os.makedirs(tables_folder)

if not os.path.isdir(raw_tables_folder):
    os.makedirs(raw_tables_folder)

if not os.path.isdir(covid_tables_folder):
    os.makedirs(covid_tables_folder)


####################### Functions ############################################




####################### Rules #########################################

rule all:
    'The output of the pipeline'
    input:
        child_msis_id_mapping_raw_table = child_msis_id_mapping_raw_table,
        mother_msis_id_mapping_raw_table = mother_msis_id_mapping_raw_table,
        father_msis_id_mapping_raw_table = father_msis_id_mapping_raw_table,
        covid_table= covid_table,
        covid_table_docs = covid_table_docs

rule raw_pheno:
    'Convert raw phenotypes and write associated documentation'
    input:
        linkage_folder = linkage_folder,
        moba_ques_folder = moba_ques_folder,
        msis_folder = msis_folder,
        sysvak_folder = sysvak_folder,
        ques_folder = ques_folder
    params:
        moba_project_number = moba_project_number,
        raw_tables_folder = raw_tables_folder,
        raw_docs_folder = raw_docs_folder
    output:
        child_id_linkage_raw_table = child_id_linkage_raw_table,
        mother_id_linkage_raw_table = mother_id_linkage_raw_table,
        father_id_linkage_raw_table = father_id_linkage_raw_table,
        mfr_raw_table = mfr_raw_table,
        msis_raw_table = msis_raw_table,
        child_msis_id_mapping_raw_table = child_msis_id_mapping_raw_table,
        mother_msis_id_mapping_raw_table = mother_msis_id_mapping_raw_table,
        father_msis_id_mapping_raw_table = father_msis_id_mapping_raw_table,
        sysvak_raw_table_path = sysvak_raw_table,
        child_sysvak_id_mapping_raw_table_path = child_sysvak_id_mapping_raw_table,
        mother_sysvak_id_mapping_raw_table_path = mother_sysvak_id_mapping_raw_table,
        father_sysvak_id_mapping_raw_table_path = father_sysvak_id_mapping_raw_table,
    conda:
        "envs/r_covid.yaml"
    threads: 1
    shell:
        """
        Rscript src/covid/scripts/raw_pheno_docs.R \
            {input.linkage_folder} \
            {input.moba_ques_folder} \
            {input.msis_folder} \
            {input.sysvak_folder} \
            {input.ques_folder} \
            {params.raw_tables_folder} \
            {params.raw_docs_folder} \
            {params.moba_project_number}
        """

rule consolidate_covid_pheno:
    'Consolidates the covid questionnaires into a single table'
    input:
        child_id_linkage_raw_table = child_id_linkage_raw_table,
        mother_id_linkage_raw_table = mother_id_linkage_raw_table,
        father_id_linkage_raw_table = father_id_linkage_raw_table,
        mfr_raw_table = mfr_raw_table,
        msis_raw_table = msis_raw_table,
        child_msis_id_mapping_raw_table = child_msis_id_mapping_raw_table,
        mother_msis_id_mapping_raw_table = mother_msis_id_mapping_raw_table,
        father_msis_id_mapping_raw_table = father_msis_id_mapping_raw_table,
        sysvak_raw_table_path = sysvak_raw_table,
        child_sysvak_id_mapping_raw_table_path = child_sysvak_id_mapping_raw_table,
        mother_sysvak_id_mapping_raw_table_path = mother_sysvak_id_mapping_raw_table,
        father_sysvak_id_mapping_raw_table_path = father_sysvak_id_mapping_raw_table,
    params:
        moba_project_number = moba_project_number,
        covid_docs_folder = covid_docs_folder,
        raw_tables_folder = raw_tables_folder
    output:
        covid_table = covid_table
    conda:
        "envs/r_covid.yaml"
    threads: 1
    shell:
        """
        Rscript src/covid/scripts/consolidate_covid_phenotypes.R \
            {params.raw_tables_folder} \
            {input.child_id_linkage_raw_table} \
            {input.mother_id_linkage_raw_table} \
            {input.father_id_linkage_raw_table} \
            {input.mfr_raw_table} \
            {input.msis_raw_table} \
            {input.child_msis_id_mapping_raw_table} \
            {input.mother_msis_id_mapping_raw_table} \
            {input.father_msis_id_mapping_raw_table} \
            {input.sysvak_raw_table_path} \
            {input.child_sysvak_id_mapping_raw_table_path} \
            {input.mother_sysvak_id_mapping_raw_table_path} \
            {input.father_sysvak_id_mapping_raw_table_path} \
            {output.covid_table} \
            {params.covid_docs_folder} \
            {params.moba_project_number}
        """


rule pheno_tables_docs:
    'Writes documentation and summary statistics on the phenotype tables'
    input:
        covid_table = covid_table
    params:
        moba_version = moba_version,
        release_version = suffix,
        project_number = moba_project_number
    output:
        covid_table_docs = covid_table_docs
    conda:
        "envs/r_covid.yaml"
    threads: 1
    shell:
        """
        Rscript src/anthropometrics/scripts/pheno_docs.R \
            {params.moba_version} \
            {params.release_version} \
            {params.project_number} \
            {input.covid_table} \
            {output.covid_table_docs}
        """
