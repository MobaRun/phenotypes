import os
import json

##
#
# This script processes the raw anthropometric phenotypes of MoBa into text tables and writes documentation.
#
# Commands to execute from the repository folder:
# conda activate snakemake
# snakemake --snakefile src/anthropometrics/anthropometrics_phenotypes.snake --cores 2 --use-conda --rerun-incomplete
##

####################### Parameters ###########################################

# Analysis
suffix = '22-09-19'
moba_project_number = 2824

# Genotypes files
fam_file = "/mnt/archive/MoBaPsychGen_v1/MoBaPsychGen_v1-ec-eur-batch-basic-qc.fam"
unrelated_children_ids_file = "/mnt/work/marc/unrelated_samples/children_id_unrelated"

# Raw phenotype files
linkage_folder = "/mnt/archive/linkage"
moba_questionnaires_folder = "/mnt/archive/phenotype/moba_ques"

# Docs folders
docs_folder = f"docs/anthropometrics/{suffix}"
raw_docs_folder = f"{docs_folder}/raw"

# Tables folders
tables_folder = f"/mnt/work/marc/pheno_anthropometrics_{suffix}"
raw_tables_folder = f"{tables_folder}/raw"

# Raw tables
mfr_raw_table = os.path.join(raw_tables_folder, 'moba_ques', f'PDB{moba_project_number}_MFR_541_v12.gz')
q1m_table = os.path.join(raw_tables_folder, 'moba_ques', f'PDB{moba_project_number}_Skjema1_v12.gz')
q1f_table = os.path.join(raw_tables_folder, 'moba_ques', f'PDB{moba_project_number}_SkjemaFar_v12.gz')
q2_table = os.path.join(raw_tables_folder, 'moba_ques', f'PDB{moba_project_number}_Skjema2_v12.gz')
q3_table = os.path.join(raw_tables_folder, 'moba_ques', f'PDB{moba_project_number}_Skjema3_v12.gz')
q4_table = os.path.join(raw_tables_folder, 'moba_ques', f'PDB{moba_project_number}_Skjema4_6mnd_v12.gz')
q5_table = os.path.join(raw_tables_folder, 'moba_ques', f'PDB{moba_project_number}_Skjema5_18mnd_v12.gz')
q6_table = os.path.join(raw_tables_folder, 'moba_ques', f'PDB{moba_project_number}_Skjema6_3aar_v12.gz')
q7_table = os.path.join(raw_tables_folder, 'moba_ques', f'PDB{moba_project_number}_Skjema5aar_v12.gz')
q8_table = os.path.join(raw_tables_folder, 'moba_ques', f'PDB{moba_project_number}_Skjema7aar_v12.gz')
q9_table = os.path.join(raw_tables_folder, 'moba_ques', f'PDB{moba_project_number}_Skjema8aar_v12.gz')
skjemaKostUngdom_table = os.path.join(raw_tables_folder, 'moba_ques', f'PDB{moba_project_number}_SkjemaKostUngdom_v12.gz')
child_id_linkage_raw_table = os.path.join(raw_tables_folder, 'linkage', f'20220516_MoBaGeneticsTot_Child_PDB{moba_project_number}.gz')
mother_id_linkage_raw_table = os.path.join(raw_tables_folder, 'linkage', f'20220516_MoBaGeneticsTot_Mother_PDB{moba_project_number}.gz')
father_id_linkage_raw_table = os.path.join(raw_tables_folder, 'linkage', f'20220516_MoBaGeneticsTot_Father_PDB{moba_project_number}.gz')

# Anthropometrics QC folder
qc_folder = f"{tables_folder}/anthropometrics_qc"


####################### Housekeeping #########################################

if not os.path.isdir(docs_folder):
    os.makedirs(docs_folder)

if not os.path.isdir(raw_docs_folder):
    os.makedirs(raw_docs_folder)

if not os.path.isdir(tables_folder):
    os.makedirs(tables_folder)

if not os.path.isdir(raw_tables_folder):
    os.makedirs(raw_tables_folder)

if not os.path.isdir(qc_folder):
    os.makedirs(qc_folder)


####################### Functions ############################################




####################### General rule #########################################

rule all:
    'The output of the pipeline'
    input:
        raw_data_docs = os.path.join(raw_docs_folder,'data.md'),
        ids_table = os.path.join(qc_folder, "ids.gz"),
        pregnancy_table = os.path.join(qc_folder, "pregnancy.gz"),
        delivery_table = os.path.join(qc_folder, "delivery.gz"),
        pregnancy_nutrition_table = os.path.join(qc_folder, "pregnancy_nutrition.gz"),
        mother_nutrition_table = os.path.join(qc_folder, "mother_nutrition.gz"),
        child_nutrition_table = os.path.join(qc_folder, "child_nutrition.gz"),
        child_table = os.path.join(qc_folder, "child.gz"),
        child_health_table = os.path.join(qc_folder, "child_health.gz"),
        parents_table = os.path.join(qc_folder, "parents.gz"),
        mother_health_table = os.path.join(qc_folder, "mother_health.gz"),
        father_health_table = os.path.join(qc_folder, "father_health.gz"),
        child_anthropometrics_table = os.path.join(qc_folder, "child_anthropometrics.gz")


rule raw_pheno:
    'Convert raw phenotypes and write associated documentation'
    input:
        linkage_folder = linkage_folder,
        moba_questionnaires_folder = moba_questionnaires_folder
    params:
        moba_project_number = moba_project_number,
        raw_tables_folder = raw_tables_folder,
        raw_docs_folder = raw_docs_folder
    output:
        docs_file = os.path.join(raw_docs_folder, 'data.md'),
        mfr_raw_table = mfr_raw_table,
        q1m_table = q1m_table,
        q1f_table = q1f_table,
        #q2_table = q2_table,
        q3_table = q3_table,
        q4_table = q4_table,
        q5_table = q5_table,
        q6_table = q6_table,
        q7_table = q7_table,
        q8_table = q8_table,
        q9_table = q9_table,
        skjemaKostUngdom_table = skjemaKostUngdom_table,
        child_id_linkage_raw_table = child_id_linkage_raw_table,
        mother_id_linkage_raw_table = mother_id_linkage_raw_table,
        father_id_linkage_raw_table = father_id_linkage_raw_table
    conda:
        "envs/r_4.1.yaml"
    threads: 1
    shell:
        """
        Rscript src/anthropometrics/scripts/raw_pheno_docs.R \
            {input.linkage_folder} \
            {input.moba_questionnaires_folder} \
            {params.raw_tables_folder} \
            {params.raw_docs_folder} \
            {params.moba_project_number}
        """


rule anthropometrics_raw_cleaning:
    'Organizes the anthropometric traits and related in separate tables and runs initial cleaning'
    input:
        child_id_linkage_raw_table = child_id_linkage_raw_table,
        mother_id_linkage_raw_table = mother_id_linkage_raw_table,
        father_id_linkage_raw_table = father_id_linkage_raw_table,
        mfr_raw_table = mfr_raw_table,
        q1m_table = q1m_table,
        q1f_table = q1f_table,
        #q2_table = q2_table,
        q3_table = q3_table,
        q4_table = q4_table,
        q5_table = q5_table,
        q6_table = q6_table,
        q7_table = q7_table,
        q8_table = q8_table,
        q9_table = q9_table,
        skjemaKostUngdom_table = skjemaKostUngdom_table
    params:
        fam_file = fam_file,
        unrelated_children_ids_file = unrelated_children_ids_file,
        qc_folder = qc_folder,
        moba_project_number = moba_project_number
    output:
         ids_table = os.path.join(qc_folder, "ids.gz"),
         pregnancy_table = os.path.join(qc_folder, "pregnancy.gz"),
         delivery_table = os.path.join(qc_folder, "delivery.gz"),
         pregnancy_nutrition_table = os.path.join(qc_folder, "pregnancy_nutrition.gz"),
         mother_nutrition_table = os.path.join(qc_folder, "mother_nutrition.gz"),
         child_nutrition_table = os.path.join(qc_folder, "child_nutrition.gz"),
         child_table = os.path.join(qc_folder, "child.gz"),
         child_health_table = os.path.join(qc_folder, "child_health.gz"),
         parents_table = os.path.join(qc_folder, "parents.gz"),
         mother_health_table = os.path.join(qc_folder, "mother_health.gz"),
         father_health_table = os.path.join(qc_folder, "father_health.gz"),
         child_anthropometrics_raw_table = os.path.join(qc_folder, "child_anthropometrics_raw.gz")
    conda:
        "envs/r_4.1.yaml"
    threads: 1
    shell:
        """
        Rscript src/anthropometrics/scripts/utils/anthropometrics/raw-cleaning.R \
            {input.child_id_linkage_raw_table} \
            {input.mother_id_linkage_raw_table} \
            {input.father_id_linkage_raw_table} \
            {params.fam_file} \
            {params.unrelated_children_ids_file} \
            {input.mfr_raw_table} \
            {input.q1m_table} \
            {input.q1f_table} \
            "" \
            {input.q3_table} \
            {input.q4_table} \
            {input.q5_table} \
            {input.q6_table} \
            {input.q7_table} \
            {input.q8_table} \
            {input.q9_table} \
            {input.skjemaKostUngdom_table} \
            {params.qc_folder} \
            {params.moba_project_number}
        """

rule growth_cleaning:
    'Removes outliers and imputes missing values'
    input:
        child_anthropometrics_raw_table = os.path.join(qc_folder, "child_anthropometrics_raw.gz")
    params:
        qc_folder = qc_folder,
        moba_project_number = moba_project_number,
        release_name = suffix
    output:
        child_anthropometrics_table = os.path.join(qc_folder, "child_anthropometrics.gz")
    conda:
        "envs/r_4.1.yaml"
    threads: 1
    shell:
        """
        Rscript src/anthropometrics/scripts/utils/anthropometrics/lw-cleaning.R \
            {params.qc_folder} \
            {params.moba_project_number} \
            {params.release_name}
        """



