import os
import json

##
#
# This script processes the raw anthropometric phenotypes of MoBa into text tables and writes documentation.
#
# Commands to execute from the repository folder:
# conda activate snakemake
# snakemake --snakefile src/anthropometrics/anthropometrics_phenotypes.snake --cores 2 --use-conda --rerun-incomplete
#
##

####################### Parameters ###########################################

#TODO: Make a parameters file

# Analysis
suffix = '23-05-28'
moba_project_number = 2824
moba_linkage_relase_date = "20221228"

# Files relating to the genotypes
fam_file = "/mnt/archive/moba/geno/MobaPsychgenReleaseMarch23/MoBaPsychGen_v1/MoBaPsychGen_v1-ec-eur-batch-basic-qc-rel.kin"

# File relating to ids and linkage
# unrelated_children_ids_file = "/mnt/work/marc/unrelated_samples/children_id_unrelated" # Can be generated by src/utils/unrelated_samples.R

# Raw phenotype files
linkage_folder = "/mnt/archive/moba/transfer_tsd/p2137-member-group/linkage"
moba_phenotypes_folder = "/mnt/archive/moba/transfer_tsd/p2137-member-group/phenotypes"

# Docs folders
docs_folder = f"docs/anthropometrics/{suffix}"
raw_docs_folder = f"{docs_folder}/raw"

# Tables folders
tables_folder = f"/mnt/archive/moba/pheno/v12/pheno_anthropometrics_{suffix}"
raw_tables_folder = f"{tables_folder}/raw"

# Raw pheno tables
mfr_541_table = os.path.join(raw_tables_folder, 'phenotypes', f'PDB{moba_project_number}_MFR_541_v12.gz')
far_table = os.path.join(raw_tables_folder, 'phenotypes', f'PDB{moba_project_number}_SkjemaFar_v12.gz')
far2_barn_table = os.path.join(raw_tables_folder, 'phenotypes', f'PDB{moba_project_number}_Far2_Barn_V12.gz')
far2_table = os.path.join(raw_tables_folder, 'phenotypes', f'PDB{moba_project_number}_Far2_V12.gz')
skjema1_table = os.path.join(raw_tables_folder, 'phenotypes', f'PDB{moba_project_number}_Skjema1_v12.gz')
skjema2cdw_table = os.path.join(raw_tables_folder, 'phenotypes', f'PDB{moba_project_number}_Skjema2CDW_v12.gz')
skjema2_beregning_cdw_caffeine_food_and_supplements_table = os.path.join(raw_tables_folder, 'phenotypes', f'PDB{moba_project_number}_Skjema2_beregning_CDW_caffeine_food_and_supplements_v12.gz')
skjema2_beregning_cdw_foody_fatty_acid_and_iodine_table = os.path.join(raw_tables_folder, 'phenotypes', f'PDB{moba_project_number}_Skjema2_beregning_CDW_foody_fatty_acid_and_iodine_v12.gz')
skjema2_beregning_cdw_supplements_table = os.path.join(raw_tables_folder, 'phenotypes', f'PDB{moba_project_number}_Skjema2_beregning_CDW_supplements_v12.gz')
skjema2_beregning_cdw = os.path.join(raw_tables_folder, 'phenotypes', f'PDB{moba_project_number}_Skjema2_beregning_CDW_v12.gz')
skjema3_table = os.path.join(raw_tables_folder, 'phenotypes', f'PDB{moba_project_number}_Skjema3_v12.gz')
skjema4_6mnd_table = os.path.join(raw_tables_folder, 'phenotypes', f'PDB{moba_project_number}_Skjema4_6mnd_v12.gz')
skjema5_18mnd_table = os.path.join(raw_tables_folder, 'phenotypes', f'PDB{moba_project_number}_Skjema5_18mnd_v12.gz')
skjema6_3aar_table = os.path.join(raw_tables_folder, 'phenotypes', f'PDB{moba_project_number}_Skjema6_3aar_v12.gz')
skjema5aar_table = os.path.join(raw_tables_folder, 'phenotypes', f'PDB{moba_project_number}_Skjema5aar_v12.gz')
skjema7aar_table = os.path.join(raw_tables_folder, 'phenotypes', f'PDB{moba_project_number}_Skjema7aar_v12.gz')
skjema8aar_table = os.path.join(raw_tables_folder, 'phenotypes', f'PDB{moba_project_number}_Skjema8aar_v12.gz')
ungdomsskjema_barn_table = os.path.join(raw_tables_folder, 'phenotypes', f'PDB{moba_project_number}_Ungdomsskjema_Barn_v12.gz')
ungdomsskjema_mor_table = os.path.join(raw_tables_folder, 'phenotypes', f'PDB{moba_project_number}_Ungdomsskjema_Mor_v12.gz')
kosthold_ungdom_beregnet_table = os.path.join(raw_tables_folder, 'phenotypes', f'PDB{moba_project_number}_Kosthold_ungdom_beregnet_v12.gz')
kosthold_ungdom_table = os.path.join(raw_tables_folder, 'phenotypes', f'PDB{moba_project_number}_Kosthold_ungdom_v12.gz')

# Raw linkage tables
child_id_linkage_raw_table = os.path.join(raw_tables_folder, 'linkage', f'PDB{moba_project_number}_MoBaGeneticsTot_Child_{moba_linkage_relase_date}.gz')
mother_id_linkage_raw_table = os.path.join(raw_tables_folder, 'linkage', f'PDB{moba_project_number}_MoBaGeneticsTot_Mother_{moba_linkage_relase_date}.gz')
father_id_linkage_raw_table = os.path.join(raw_tables_folder, 'linkage', f'PDB{moba_project_number}_MoBaGeneticsTot_Father_{moba_linkage_relase_date}.gz')
father_id_linkage_raw_table = os.path.join(raw_tables_folder, 'linkage', f'PDB{moba_project_number}_SV_INFO_V12_{moba_linkage_relase_date}.gz')

# Anthropometrics QC folder
qc_folder = f"{tables_folder}/qc"


####################### Housekeeping #########################################

if not os.path.isdir(docs_folder):
    os.makedirs(docs_folder)

if not os.path.isdir(raw_docs_folder):
    os.makedirs(raw_docs_folder)

if not os.path.isdir(tables_folder):
    os.makedirs(tables_folder)

if not os.path.isdir(raw_tables_folder):
    os.makedirs(raw_tables_folder)

if not os.path.isdir(qc_folder):
    os.makedirs(qc_folder)


####################### Functions ############################################




####################### General rule #########################################

rule all:
    'The output of the pipeline'
    input:
        raw_data_docs = os.path.join(raw_docs_folder,'data.md'),
        # ids_table = os.path.join(tables_folder, "ids.gz"),
        # pregnancy_table = os.path.join(tables_folder, "pregnancy.gz"),
        # delivery_table = os.path.join(tables_folder, "delivery.gz"),
        # pregnancy_nutrition_table = os.path.join(tables_folder, "pregnancy_nutrition.gz"),
        # mother_nutrition_table = os.path.join(tables_folder, "mother_nutrition.gz"),
        # child_nutrition_table = os.path.join(tables_folder, "child_nutrition.gz"),
        # child_table = os.path.join(tables_folder, "child.gz"),
        # child_health_table = os.path.join(tables_folder, "child_health.gz"),
        # parents_table = os.path.join(tables_folder, "parents.gz"),
        # mother_health_table = os.path.join(tables_folder, "mother_health.gz"),
        # father_health_table = os.path.join(tables_folder, "father_health.gz"),
        # child_anthropometrics_table = os.path.join(tables_folder, "child_anthropometrics.gz")

rule raw_pheno:
    'Convert raw phenotypes and write associated documentation'
    input:
        linkage_folder = linkage_folder,
        moba_phenotypes_folder = moba_phenotypes_folder
    params:
        moba_project_number = moba_project_number,
        raw_tables_folder = raw_tables_folder,
        raw_docs_folder = raw_docs_folder
    output:
        docs_file = os.path.join(raw_docs_folder, 'data.md'),
        mfr_541_table = mfr_541_table,
        far_table = far_table,
        far2_barn_table = far2_barn_table,
        far2_table = far2_table,
        skjema1_table = skjema1_table,
        skjema2cdw_table = skjema2cdw_table,
        skjema2_beregning_cdw_caffeine_food_and_supplements_table = skjema2_beregning_cdw_caffeine_food_and_supplements_table,
        skjema2_beregning_cdw_foody_fatty_acid_and_iodine_table = skjema2_beregning_cdw_foody_fatty_acid_and_iodine_table,
        skjema2_beregning_cdw_supplements_table = skjema2_beregning_cdw_supplements_table,
        skjema2_beregning_cdw = skjema2_beregning_cdw,
        skjema3_table = skjema3_table,
        skjema4_6mnd_table = skjema4_6mnd_table,
        skjema5_18mnd_table = skjema5_18mnd_table,
        skjema6_3aar_table = skjema6_3aar_table,
        skjema5aar_table = skjema5aar_table,
        skjema7aar_table = skjema7aar_table,
        skjema8aar_table = skjema8aar_table,
        ungdomsskjema_barn_table = ungdomsskjema_barn_table,
        ungdomsskjema_mor_table = ungdomsskjema_mor_table,
        kosthold_ungdom_beregnet_table = kosthold_ungdom_beregnet_table,
        kosthold_ungdom_table = kosthold_ungdom_table,
        child_id_linkage_raw_table = child_id_linkage_raw_table,
        mother_id_linkage_raw_table = mother_id_linkage_raw_table,
        father_id_linkage_raw_table = father_id_linkage_raw_table
    conda:
        "envs/r_anthropometrics.yaml"
    threads: 1
    shell:
        """
        Rscript src/anthropometrics/scripts/raw_pheno_docs.R \
            {input.linkage_folder} \
            {input.moba_phenotypes_folder} \
            {params.raw_tables_folder} \
            {params.raw_docs_folder} \
            {params.moba_project_number}
        """


# rule unrelated_children:
#     'Gets a list of unrelated children from the same cluster in PCA'
#     input:
#         kinship_file


rule anthropometrics_raw_cleaning:
    'Organizes the anthropometric traits and related in separate tables and runs initial cleaning'
    input:
        child_id_linkage_raw_table = child_id_linkage_raw_table,
        mother_id_linkage_raw_table = mother_id_linkage_raw_table,
        father_id_linkage_raw_table = father_id_linkage_raw_table,
        mfr_raw_table = mfr_raw_table,
        q1m_table = q1m_table,
        q1f_table = q1f_table,
        #q2_table = q2_table,
        q3_table = q3_table,
        q4_table = q4_table,
        q5_table = q5_table,
        q6_table = q6_table,
        q7_table = q7_table,
        q8_table = q8_table,
        q9_table = q9_table,
        skjemaKostUngdom_table = skjemaKostUngdom_table
    params:
        fam_file = fam_file,
        # unrelated_children_ids_file = unrelated_children_ids_file,
        tables_folder = tables_folder,
        qc_folder = qc_folder,
        moba_project_number = moba_project_number
    output:
         ids_table = os.path.join(tables_folder, "ids.gz"),
         pregnancy_table = os.path.join(tables_folder, "pregnancy.gz"),
         delivery_table = os.path.join(tables_folder, "delivery.gz"),
         pregnancy_nutrition_table = os.path.join(tables_folder, "pregnancy_nutrition.gz"),
         mother_nutrition_table = os.path.join(tables_folder, "mother_nutrition.gz"),
         child_nutrition_table = os.path.join(tables_folder, "child_nutrition.gz"),
         child_table = os.path.join(tables_folder, "child.gz"),
         child_health_table = os.path.join(tables_folder, "child_health.gz"),
         parents_table = os.path.join(tables_folder, "parents.gz"),
         mother_health_table = os.path.join(tables_folder, "mother_health.gz"),
         father_health_table = os.path.join(tables_folder, "father_health.gz"),
         child_anthropometrics_raw_table = os.path.join(tables_folder, "child_anthropometrics_raw.gz")
    conda:
        "envs/r_anthropometrics.yaml"
    threads: 1
    shell:
        """
        Rscript src/anthropometrics/scripts/utils/raw-cleaning.R \
            {input.child_id_linkage_raw_table} \
            {input.mother_id_linkage_raw_table} \
            {input.father_id_linkage_raw_table} \
            {params.fam_file} \
            {params.unrelated_children_ids_file} \
            {input.mfr_raw_table} \
            {input.q1m_table} \
            {input.q1f_table} \
            "" \
            {input.q3_table} \
            {input.q4_table} \
            {input.q5_table} \
            {input.q6_table} \
            {input.q7_table} \
            {input.q8_table} \
            {input.q9_table} \
            {input.skjemaKostUngdom_table} \
            {params.tables_folder} \
            {params.qc_folder} \
            {params.moba_project_number}
        """

rule growth_cleaning:
    'Removes outliers and imputes missing values'
    input:
        child_anthropometrics_raw_table = os.path.join(tables_folder, "child_anthropometrics_raw.gz")
    params:
        tables_folder = tables_folder,
        qc_folder = qc_folder,
        moba_project_number = moba_project_number,
        release_name = suffix
    output:
        child_anthropometrics_table = os.path.join(tables_folder, "child_anthropometrics.gz")
    conda:
        "envs/r_anthropometrics.yaml"
    threads: 1
    shell:
        """
        Rscript src/anthropometrics/scripts/utils/lw-cleaning.R \
            {params.tables_folder} \
            {params.qc_folder} \
            {params.moba_project_number} \
            {params.release_name}
        """



